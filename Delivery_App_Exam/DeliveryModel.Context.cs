//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Delivery_App_Exam
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DeliveryDBEntities : DbContext
    {
        public DeliveryDBEntities()
            : base("name=DeliveryDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
       
    
        public virtual int stp_OrderInsert(string deliveryAdress, string orderDescription, Nullable<System.DateTime> orderDate, Nullable<double> deliveryCost, Nullable<int> carrierId, Nullable<int> orderStatus_Id, ObjectParameter id)
        {
            var deliveryAdressParameter = deliveryAdress != null ?
                new ObjectParameter("DeliveryAdress", deliveryAdress) :
                new ObjectParameter("DeliveryAdress", typeof(string));
    
            var orderDescriptionParameter = orderDescription != null ?
                new ObjectParameter("OrderDescription", orderDescription) :
                new ObjectParameter("OrderDescription", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var deliveryCostParameter = deliveryCost.HasValue ?
                new ObjectParameter("DeliveryCost", deliveryCost) :
                new ObjectParameter("DeliveryCost", typeof(double));
    
            var carrierIdParameter = carrierId.HasValue ?
                new ObjectParameter("CarrierId", carrierId) :
                new ObjectParameter("CarrierId", typeof(int));
    
            var orderStatus_IdParameter = orderStatus_Id.HasValue ?
                new ObjectParameter("OrderStatus_Id", orderStatus_Id) :
                new ObjectParameter("OrderStatus_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_OrderInsert", deliveryAdressParameter, orderDescriptionParameter, orderDateParameter, deliveryCostParameter, carrierIdParameter, orderStatus_IdParameter, id);
        }
    
        public virtual int stp_Add_Carrier(string firstName, string lastName, Nullable<System.DateTime> birthDate, Nullable<bool> haveLicense, string licenseCategory, ObjectParameter id)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var birthDateParameter = birthDate.HasValue ?
                new ObjectParameter("BirthDate", birthDate) :
                new ObjectParameter("BirthDate", typeof(System.DateTime));
    
            var haveLicenseParameter = haveLicense.HasValue ?
                new ObjectParameter("HaveLicense", haveLicense) :
                new ObjectParameter("HaveLicense", typeof(bool));
    
            var licenseCategoryParameter = licenseCategory != null ?
                new ObjectParameter("LicenseCategory", licenseCategory) :
                new ObjectParameter("LicenseCategory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_Add_Carrier", firstNameParameter, lastNameParameter, birthDateParameter, haveLicenseParameter, licenseCategoryParameter, id);
        }
    
        public virtual ObjectResult<stp_OrderByStatusID_Result> stp_OrderByStatusID(Nullable<int> statusID)
        {
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_OrderByStatusID_Result>("stp_OrderByStatusID", statusIDParameter);
        }
    }
}
